---
interface Testimonio {
  id: number;
  texto: string;
  nombre: string;
  rol: string;
}

const testimonios: Testimonio[] = [
  {
    id: 1,
    texto: "Un lugar mágico donde encontré paz y claridad. Me sentí acogido por la naturaleza y por la energía de todo el equipo.",
    nombre: "María López",
    rol: "Participante de retiro",
  },
  {
    id: 2,
    texto: "Una experiencia transformadora. Los rituales y la conexión con los Andes me ayudaron a reconectar con mi propósito.",
    nombre: "Carlos Ramírez",
    rol: "Asistente a ceremonia",
  },
  {
    id: 3,
    texto: "Las Cabañas es un refugio de sanación. Volvería una y mil veces a vivir esta experiencia tan enriquecedora.",
    nombre: "Lucía Fernández",
    rol: "Huésped",
  },
];
---

<section id="testimonios" class="py-20 bg-white relative">
  <div class="max-w-4xl mx-auto px-6 md:px-12 text-center">
    <h2 class="text-3xl md:text-4xl font-bold text-[#19470c] mb-4">
      Lo que dicen nuestros visitantes
    </h2>
    <p class="text-gray-700 max-w-2xl mx-auto mb-12">
      Cada experiencia en <strong>Las Cabañas</strong> deja huellas profundas de conexión,
      sanación y transformación personal.
    </p>
  </div>

  <!-- Contenedor que oculta el desbordamiento -->
  <div class="relative w-full overflow-hidden">
    <!-- Track -->
    <div
      id="testi-track"
      class="flex transition-transform duration-700 ease-in-out"
    >
      {testimonios.map((t) => (
        <div class="w-full flex-shrink-0 px-6 md:px-0">
          <div class="bg-gray-50 rounded-2xl shadow-lg p-10 flex flex-col items-center text-center py-16">
            <i class="fas fa-quote-left text-green-700 text-3xl mb-4"></i>
            <p class="text-gray-600 italic mb-6">“{t.texto}”</p>
            <h3 class="text-green-800 font-semibold">{t.nombre}</h3>
            <span class="text-sm text-gray-500">{t.rol}</span>
          </div>
        </div>
      ))}
    </div>

    <!-- Controles -->
    <button
      id="testi-prev"
      class="absolute left-2 md:left-4 top-1/2 -translate-y-1/2 bg-black/50 text-white w-12 h-12 rounded-full flex items-center justify-center hover:bg-black/70 transition"
      aria-label="Anterior"
    >
      <i class="fas fa-chevron-left"></i>
    </button>

    <button
      id="testi-next"
      class="absolute right-2 md:right-4 top-1/2 -translate-y-1/2 bg-black/50 text-white w-12 h-12 rounded-full flex items-center justify-center hover:bg-black/70 transition"
      aria-label="Siguiente"
    >
      <i class="fas fa-chevron-right"></i>
    </button>
  </div>

  <!-- Paginación -->
  <div
    id="testi-dots"
    class="absolute bottom-6 left-1/2 -translate-x-1/2 flex gap-2 z-20"
  >
    {testimonios.map(() => (
      <span class="dot w-3 h-3 bg-gray-400 rounded-full cursor-pointer"></span>
    ))}
  </div>
</section>

<script>
  const track = document.getElementById("testi-track");
  const prev = document.getElementById("testi-prev");
  const next = document.getElementById("testi-next");
  const dots = document.querySelectorAll("#testi-dots .dot");

  if (track && prev && next) {
    let index = 0;
    const total = track.children.length;

    function updateSlider() {
      (track as HTMLElement).style.transform = `translateX(-${index * 100}%)`;
      dots.forEach((d, i) => {
        d.classList.toggle("bg-green-700", i === index);
        d.classList.toggle("bg-gray-400", i !== index);
      });
    }

    next.addEventListener("click", () => {
      index = (index + 1) % total;
      updateSlider();
    });

    prev.addEventListener("click", () => {
      index = (index - 1 + total) % total;
      updateSlider();
    });

    dots.forEach((d, i) => {
      d.addEventListener("click", () => {
        index = i;
        updateSlider();
      });
    });

    setInterval(() => {
      index = (index + 1) % total;
      updateSlider();
    }, 6000);

    updateSlider();
  }
</script>
